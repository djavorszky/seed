package {{ .PackageName }}

{{ range .Imports }}import "{{.}}"{{ end }}

// {{.ServiceName}}Service encapsulates the handler interface, which holds all the methods to be called
// by the server, and middleware interface, which contains all the middlewares to be added to the service.
type {{.ServiceName}}Service interface {
	{{.ServiceName}}Handler
	{{.ServiceName}}Middleware
}

// {{.ServiceName}}Handler is the interface for the handlers. Any new endpoint added by seed will be added here as a
// new method on the interface.
type {{.ServiceName}}Handler interface {
    {{ range .Services}}{{.}}{{ end }}
}

// {{.ServiceName}}Middleware is the interface for all the middlewares that will be added to all of the paths.
type {{.ServiceName}}Middleware interface {
    {{ range .Middlewares}}{{.}}{{ end }}
}
